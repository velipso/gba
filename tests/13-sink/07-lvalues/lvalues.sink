var x, y, z

y = 5
y += 10
say y # 15

x = y += 20
say x, y # 35 35

{x, y} = {1, 2}
say x, y # 1 2

{x, y} += {3, 4}
say x, y # 4 6

z = {x, y} = {5, 6}
say x, y, z # 5 6 {5, 6}

x = {1, 2}
x[0] += 5
say x # {6, 2}

y = {1, x, 2}
y[1][0] += 5
say x # {11, 2}

y[0:0] = {5, 6, 7}
say y # {5, 6, 7, 1, {11, 2}, 2}

y[4][1:1] = {10, 9}
y[0:4] = nil
say y # {{11, 10, 9}, 2}

y[:] = {1}
say y # {1}

y = {1, 2, 3, 4}
x = y[1:2] = {9, 9}
say x, y # {9, 9} {1, 9, 9, 4}

y[1:2] += {1, 1}
say y # {1, 10, 10, 4}

z = {1, 2}
x = nil
y = 10
{x, y} ||= z
say x, y # 1 10

x = {1, 2, nil, 3, 4}
{x[1:3]} ||= {{6, 7, 8}}
say x # {1, 2, 7, 3, 4}

x = {1, 2, nil, 3, 4}
x[1:3] ||= {6, 7, 8}
say x # {1, 2, 7, 3, 4}

x = {1, nil, 3, nil, 4}
x[1:3] &&= {6, 7, 8}
say x # {1, nil, 7, nil, 4}

x = {1, nil, 3, nil, 4}
{x[1:3]} &&= {{6, 7, 8}}
say x # {1, nil, 7, nil, 4}

x &&= 1
say x # 1

x = nil
x ||= 2
say x # 2

def add a, b
  say "add $a, $b"
  return a + b
end

x = 1
x ||= add 1, 2 # shouldn't output anything

x = nil
x &&= add 3, 4 # shouldn't output anything

x = {1, 2, 3, 4}
x[:] ||= {add 5, 6} # shouldn't output anything

x = {nil, nil, nil}
x[:] &&= {add 7, 8} # shouldn't output anything

x = nil
{{x}} &&= {{add 9, 10}} # shouldn't output anything

x = 1
y = 2
{x, {y, x}} ||= {add 11, 12} # shouldn't output anything
